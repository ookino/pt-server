# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  address1: String!
  address2: String!
  city: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  landmark: String!
  postcode: Int!
  state: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input AddressInput {
  address1: String!
  address2: String!
  city: String!
  landmark: String!
  postcode: Int!
  state: String!
}

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreatePropertyAddressInput {
  address1: String!
  address2: String!
  city: String!
  landmark: String!
  postcode: Int!
  state: String!
}

input CreatePropertyImageInput {
  url: String!
}

input CreatePropertyInput {
  address: CreatePropertyAddressInput!
  bathrooms: Int!
  bedrooms: Int!
  category: PropertyCategory!
  description: String!
  images: [CreatePropertyImageInput!]!
  price: Int!
  status: PropertyStatus!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createProperty(data: CreatePropertyInput!): Property!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Property {
  address: Address!
  bathrooms: Int!
  bedrooms: Int!
  category: PropertyCategory!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String!
  id: ID!
  images: [PropertyImage!]!
  price: Int!
  status: PropertyStatus!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

enum PropertyCategory {
  FOR_RENT
  FOR_SALE
}

type PropertyConnection {
  edges: [PropertyEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PropertyEdge {
  cursor: String!
  node: Property!
}

type PropertyImage {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  property: Property!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  url: String!
}

input PropertyOrder {
  direction: OrderDirection!
  field: PropertyOrderField!
}

"""Properties by which post connections can be ordered."""
enum PropertyOrderField {
  address
  bathrooms
  bedrooms
  category
  createdAt
  description
  id
  images
  price
  status
  updatedAt
}

enum PropertyStatus {
  AVAILABLE
  SOLD
  UNDER_OFFER
}

type Query {
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  properties(after: String, before: String, first: Int, last: Int, orderBy: PropertyOrder, query: String, skip: Int): PropertyConnection!
  property(propertyId: String!): Property!
}

"""User role"""
enum Role {
  ADMIN
  AGENT
  USER
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

type Subscription {
  propertyCreated: Property!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}